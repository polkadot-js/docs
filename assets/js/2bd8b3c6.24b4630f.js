"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[9827],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return k}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,k=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8454:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(4137)),l=["components"],o={title:"Runtime"},s=void 0,u={unversionedId:"asset-hub-kusama/runtime",id:"asset-hub-kusama/runtime",title:"Runtime",description:"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.",source:"@site/docs/asset-hub-kusama/runtime.md",sourceDirName:"asset-hub-kusama",slug:"/asset-hub-kusama/runtime",permalink:"/docs/asset-hub-kusama/runtime",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/asset-hub-kusama/runtime.md",tags:[],version:"current",frontMatter:{title:"Runtime"},sidebar:"reference",previous:{title:"Overview",permalink:"/docs/asset-hub-kusama"},next:{title:"JSON-RPC",permalink:"/docs/asset-hub-kusama/rpc"}},c={},m=[{value:"accountNonceApi",id:"accountnonceapi",level:2},{value:"accountNonce(account: <code>SpCoreCryptoAccountId32</code>): <code>u32</code>",id:"accountnonceaccount-spcorecryptoaccountid32-u32",level:3},{value:"assetConversionApi",id:"assetconversionapi",level:2},{value:"getReserves(asset1: <code>StagingXcmV4Location</code>, asset2: <code>StagingXcmV4Location</code>): <code>Option&lt;(u128,u128)&gt;</code>",id:"getreservesasset1-stagingxcmv4location-asset2-stagingxcmv4location-optionu128u128",level:3},{value:"quotePriceExactTokensForTokens(asset1: <code>StagingXcmV4Location</code>, asset2: <code>StagingXcmV4Location</code>, amount: <code>u128</code>, include_fee: <code>bool</code>): <code>Option&lt;u128&gt;</code>",id:"quotepriceexacttokensfortokensasset1-stagingxcmv4location-asset2-stagingxcmv4location-amount-u128-include_fee-bool-optionu128",level:3},{value:"quotePriceTokensForExactTokens(asset1: <code>StagingXcmV4Location</code>, asset2: <code>StagingXcmV4Location</code>, amount: <code>u128</code>, include_fee: <code>bool</code>): <code>Option&lt;u128&gt;</code>",id:"quotepricetokensforexacttokensasset1-stagingxcmv4location-asset2-stagingxcmv4location-amount-u128-include_fee-bool-optionu128",level:3},{value:"auraApi",id:"auraapi",level:2},{value:"authorities(): <code>Vec&lt;SpConsensusAuraSr25519AppSr25519Public&gt;</code>",id:"authorities-vecspconsensusaurasr25519appsr25519public",level:3},{value:"slotDuration(): <code>SpConsensusSlotsSlotDuration</code>",id:"slotduration-spconsensusslotsslotduration",level:3},{value:"auraUnincludedSegmentApi",id:"auraunincludedsegmentapi",level:2},{value:"canBuildUpon(included_hash: <code>PrimitiveTypesH256</code>, slot: <code>SpConsensusSlotsSlot</code>): <code>bool</code>",id:"canbuilduponincluded_hash-primitivetypesh256-slot-spconsensusslotsslot-bool",level:3},{value:"blockBuilder",id:"blockbuilder",level:2},{value:"applyExtrinsic(extrinsic: <code>SpRuntimeUncheckedExtrinsic</code>): <code>Result&lt;Result&lt;Null, SpRuntimeDispatchError&gt;, SpRuntimeTransactionValidityTransactionValidityError&gt;</code>",id:"applyextrinsicextrinsic-spruntimeuncheckedextrinsic-resultresultnull-spruntimedispatcherror-spruntimetransactionvaliditytransactionvalidityerror",level:3},{value:"checkInherents(block: <code>SpRuntimeBlock</code>, data: <code>SpInherentsInherentData</code>): <code>SpInherentsCheckInherentsResult</code>",id:"checkinherentsblock-spruntimeblock-data-spinherentsinherentdata-spinherentscheckinherentsresult",level:3},{value:"finalizeBlock(): <code>SpRuntimeHeader</code>",id:"finalizeblock-spruntimeheader",level:3},{value:"inherentExtrinsics(inherent: <code>SpInherentsInherentData</code>): <code>Vec&lt;Bytes&gt;</code>",id:"inherentextrinsicsinherent-spinherentsinherentdata-vecbytes",level:3},{value:"collectCollationInfo",id:"collectcollationinfo",level:2},{value:"collectCollationInfo(header: <code>SpRuntimeHeader</code>): <code>CumulusPrimitivesCoreCollationInfo</code>",id:"collectcollationinfoheader-spruntimeheader-cumulusprimitivescorecollationinfo",level:3},{value:"core",id:"core",level:2},{value:"executeBlock(block: <code>SpRuntimeBlock</code>): <code>Null</code>",id:"executeblockblock-spruntimeblock-null",level:3},{value:"initializeBlock(header: <code>SpRuntimeHeader</code>): <code>SpRuntimeExtrinsicInclusionMode</code>",id:"initializeblockheader-spruntimeheader-spruntimeextrinsicinclusionmode",level:3},{value:"version(): <code>SpVersionRuntimeVersion</code>",id:"version-spversionruntimeversion",level:3},{value:"dryRunApi",id:"dryrunapi",level:2},{value:"dryRunCall(origin: <code>AssetHubKusamaRuntimeOriginCaller</code>, call: <code>AssetHubKusamaRuntimeRuntimeCall</code>): <code>Result&lt;XcmRuntimeApisDryRunCallDryRunEffects, XcmRuntimeApisDryRunError&gt;</code>",id:"dryruncallorigin-assethubkusamaruntimeorigincaller-call-assethubkusamaruntimeruntimecall-resultxcmruntimeapisdryruncalldryruneffects-xcmruntimeapisdryrunerror",level:3},{value:"dryRunXcm(origin_location: <code>XcmVersionedLocation</code>, xcm: <code>XcmVersionedXcm</code>): <code>Result&lt;XcmRuntimeApisDryRunXcmDryRunEffects, XcmRuntimeApisDryRunError&gt;</code>",id:"dryrunxcmorigin_location-xcmversionedlocation-xcm-xcmversionedxcm-resultxcmruntimeapisdryrunxcmdryruneffects-xcmruntimeapisdryrunerror",level:3},{value:"fungiblesApi",id:"fungiblesapi",level:2},{value:"queryAccountBalances(account: <code>SpCoreCryptoAccountId32</code>): <code>Result&lt;XcmVersionedAssets, AssetsCommonRuntimeApiFungiblesAccessError&gt;</code>",id:"queryaccountbalancesaccount-spcorecryptoaccountid32-resultxcmversionedassets-assetscommonruntimeapifungiblesaccesserror",level:3},{value:"genesisBuilder",id:"genesisbuilder",level:2},{value:"buildState(json: <code>Bytes</code>): <code>Result&lt;Null, Text&gt;</code>",id:"buildstatejson-bytes-resultnull-text",level:3},{value:"getPreset(id: <code>Option&lt;Text&gt;</code>): <code>Option&lt;Bytes&gt;</code>",id:"getpresetid-optiontext-optionbytes",level:3},{value:"presetNames(): <code>Vec&lt;Text&gt;</code>",id:"presetnames-vectext",level:3},{value:"locationToAccountApi",id:"locationtoaccountapi",level:2},{value:"convertLocation(location: <code>XcmVersionedLocation</code>): <code>Result&lt;AccountId32, XcmRuntimeApisConversionsError&gt;</code>",id:"convertlocationlocation-xcmversionedlocation-resultaccountid32-xcmruntimeapisconversionserror",level:3},{value:"metadata",id:"metadata",level:2},{value:"metadata(): <code>SpCoreOpaqueMetadata</code>",id:"metadata-spcoreopaquemetadata",level:3},{value:"metadataAtVersion(version: <code>u32</code>): <code>Option&lt;OpaqueMetadata&gt;</code>",id:"metadataatversionversion-u32-optionopaquemetadata",level:3},{value:"metadataVersions(): <code>Vec&lt;u32&gt;</code>",id:"metadataversions-vecu32",level:3},{value:"offchainWorkerApi",id:"offchainworkerapi",level:2},{value:"offchainWorker(header: <code>SpRuntimeHeader</code>): <code>Null</code>",id:"offchainworkerheader-spruntimeheader-null",level:3},{value:"sessionKeys",id:"sessionkeys",level:2},{value:"decodeSessionKeys(encoded: <code>Bytes</code>): <code>Option&lt;Vec&lt;(Bytes,SpCoreCryptoKeyTypeId)&gt;&gt;</code>",id:"decodesessionkeysencoded-bytes-optionvecbytesspcorecryptokeytypeid",level:3},{value:"generateSessionKeys(seed: <code>Option&lt;Bytes&gt;</code>): <code>Bytes</code>",id:"generatesessionkeysseed-optionbytes-bytes",level:3},{value:"taggedTransactionQueue",id:"taggedtransactionqueue",level:2},{value:"validateTransaction(source: <code>SpRuntimeTransactionValidityTransactionSource</code>, tx: <code>SpRuntimeUncheckedExtrinsic</code>, block_hash: <code>PrimitiveTypesH256</code>): <code>Result&lt;SpRuntimeTransactionValidityValidTransaction, SpRuntimeTransactionValidityTransactionValidityError&gt;</code>",id:"validatetransactionsource-spruntimetransactionvaliditytransactionsource-tx-spruntimeuncheckedextrinsic-block_hash-primitivetypesh256-resultspruntimetransactionvalidityvalidtransaction-spruntimetransactionvaliditytransactionvalidityerror",level:3},{value:"transactionPaymentApi",id:"transactionpaymentapi",level:2},{value:"queryFeeDetails(uxt: <code>SpRuntimeUncheckedExtrinsic</code>, len: <code>u32</code>): <code>PalletTransactionPaymentFeeDetails</code>",id:"queryfeedetailsuxt-spruntimeuncheckedextrinsic-len-u32-pallettransactionpaymentfeedetails",level:3},{value:"queryInfo(uxt: <code>SpRuntimeUncheckedExtrinsic</code>, len: <code>u32</code>): <code>PalletTransactionPaymentRuntimeDispatchInfo</code>",id:"queryinfouxt-spruntimeuncheckedextrinsic-len-u32-pallettransactionpaymentruntimedispatchinfo",level:3},{value:"queryLengthToFee(length: <code>u32</code>): <code>u128</code>",id:"querylengthtofeelength-u32-u128",level:3},{value:"queryWeightToFee(weight: <code>SpWeightsWeightV2Weight</code>): <code>u128</code>",id:"queryweighttofeeweight-spweightsweightv2weight-u128",level:3},{value:"transactionPaymentCallApi",id:"transactionpaymentcallapi",level:2},{value:"queryCallFeeDetails(call: <code>AssetHubKusamaRuntimeRuntimeCall</code>, len: <code>u32</code>): <code>PalletTransactionPaymentFeeDetails</code>",id:"querycallfeedetailscall-assethubkusamaruntimeruntimecall-len-u32-pallettransactionpaymentfeedetails",level:3},{value:"queryCallInfo(call: <code>AssetHubKusamaRuntimeRuntimeCall</code>, len: <code>u32</code>): <code>PalletTransactionPaymentRuntimeDispatchInfo</code>",id:"querycallinfocall-assethubkusamaruntimeruntimecall-len-u32-pallettransactionpaymentruntimedispatchinfo",level:3},{value:"queryLengthToFee(length: <code>u32</code>): <code>u128</code>",id:"querylengthtofeelength-u32-u128-1",level:3},{value:"queryWeightToFee(weight: <code>SpWeightsWeightV2Weight</code>): <code>u128</code>",id:"queryweighttofeeweight-spweightsweightv2weight-u128-1",level:3},{value:"xcmPaymentApi",id:"xcmpaymentapi",level:2},{value:"queryAcceptablePaymentAssets(xcm_version: <code>u32</code>): <code>Result&lt;Vec&lt;XcmVersionedAssetId&gt;, XcmRuntimeApisFeesError&gt;</code>",id:"queryacceptablepaymentassetsxcm_version-u32-resultvecxcmversionedassetid-xcmruntimeapisfeeserror",level:3},{value:"queryDeliveryFees(destination: <code>XcmVersionedLocation</code>, message: <code>XcmVersionedXcm</code>): <code>Result&lt;XcmVersionedAssets, XcmRuntimeApisFeesError&gt;</code>",id:"querydeliveryfeesdestination-xcmversionedlocation-message-xcmversionedxcm-resultxcmversionedassets-xcmruntimeapisfeeserror",level:3},{value:"queryWeightToAssetFee(weight: <code>SpWeightsWeightV2Weight</code>, asset: <code>XcmVersionedAssetId</code>): <code>Result&lt;u128, XcmRuntimeApisFeesError&gt;</code>",id:"queryweighttoassetfeeweight-spweightsweightv2weight-asset-xcmversionedassetid-resultu128-xcmruntimeapisfeeserror",level:3},{value:"queryXcmWeight(message: <code>XcmVersionedXcm</code>): <code>Result&lt;SpWeightsWeightV2Weight, XcmRuntimeApisFeesError&gt;</code>",id:"queryxcmweightmessage-xcmversionedxcm-resultspweightsweightv2weight-xcmruntimeapisfeeserror",level:3}],p={toc:m},d="wrapper";function k(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#accountnonceapi"},"accountNonceApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#assetconversionapi"},"assetConversionApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#auraapi"},"auraApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#auraunincludedsegmentapi"},"auraUnincludedSegmentApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#blockbuilder"},"blockBuilder")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#collectcollationinfo"},"collectCollationInfo")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#core"},"core")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#dryrunapi"},"dryRunApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#fungiblesapi"},"fungiblesApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#genesisbuilder"},"genesisBuilder")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#locationtoaccountapi"},"locationToAccountApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#metadata"},"metadata")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#offchainworkerapi"},"offchainWorkerApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#sessionkeys"},"sessionKeys")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#taggedtransactionqueue"},"taggedTransactionQueue")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentapi"},"transactionPaymentApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentcallapi"},"transactionPaymentCallApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#xcmpaymentapi"},"xcmPaymentApi"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"accountnonceapi"},"accountNonceApi"),(0,r.kt)("h3",{id:"accountnonceaccount-spcorecryptoaccountid32-u32"},"accountNonce(account: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpCoreCryptoAccountId32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.accountNonceApi.accountNonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"accountNonceApi_account_nonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Get current account nonce of given ",(0,r.kt)("inlineCode",{parentName:"li"},"AccountId"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"assetconversionapi"},"assetConversionApi"),(0,r.kt)("h3",{id:"getreservesasset1-stagingxcmv4location-asset2-stagingxcmv4location-optionu128u128"},"getReserves(asset1: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),", asset2: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<(u128,u128)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.assetConversionApi.getReserves")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"assetConversionApi_get_reserves")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the size of the liquidity pool for the given asset pair.")),(0,r.kt)("h3",{id:"quotepriceexacttokensfortokensasset1-stagingxcmv4location-asset2-stagingxcmv4location-amount-u128-include_fee-bool-optionu128"},"quotePriceExactTokensForTokens(asset1: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),", asset2: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),", amount: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128"),", include_fee: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<u128>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.assetConversionApi.quotePriceExactTokensForTokens")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"assetConversionApi_quote_price_exact_tokens_for_tokens")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Provides a quote for ","[",(0,r.kt)("inlineCode",{parentName:"li"},"Pallet::swap_exact_tokens_for_tokens"),"]",".,, Note that the price may have changed by the time the transaction is executed., (Use ",(0,r.kt)("inlineCode",{parentName:"li"},"amount_out_min")," to control slippage.)")),(0,r.kt)("h3",{id:"quotepricetokensforexacttokensasset1-stagingxcmv4location-asset2-stagingxcmv4location-amount-u128-include_fee-bool-optionu128"},"quotePriceTokensForExactTokens(asset1: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),", asset2: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StagingXcmV4Location"),", amount: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128"),", include_fee: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<u128>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.assetConversionApi.quotePriceTokensForExactTokens")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"assetConversionApi_quote_price_tokens_for_exact_tokens")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Provides a quote for ","[",(0,r.kt)("inlineCode",{parentName:"li"},"Pallet::swap_tokens_for_exact_tokens"),"]",".,, Note that the price may have changed by the time the transaction is executed., (Use ",(0,r.kt)("inlineCode",{parentName:"li"},"amount_in_max")," to control slippage.)")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"auraapi"},"auraApi"),(0,r.kt)("h3",{id:"authorities-vecspconsensusaurasr25519appsr25519public"},"authorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<SpConsensusAuraSr25519AppSr25519Public>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.auraApi.authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"auraApi_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Return the current set of authorities.")),(0,r.kt)("h3",{id:"slotduration-spconsensusslotsslotduration"},"slotDuration(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpConsensusSlotsSlotDuration")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.auraApi.slotDuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"auraApi_slot_duration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the slot duration for Aura.,, Currently, only the value provided by this type at genesis will be used.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"auraunincludedsegmentapi"},"auraUnincludedSegmentApi"),(0,r.kt)("h3",{id:"canbuilduponincluded_hash-primitivetypesh256-slot-spconsensusslotsslot-bool"},"canBuildUpon(included_hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrimitiveTypesH256"),", slot: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpConsensusSlotsSlot"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.auraUnincludedSegmentApi.canBuildUpon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"auraUnincludedSegmentApi_can_build_upon")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Whether it is legal to extend the chain, assuming the given block is the most, recently included one as-of the relay parent that will be built against, and, the given slot.,, This should be consistent with the logic the runtime uses when validating blocks to, avoid issues.,, When the unincluded segment is empty, i.e. ",(0,r.kt)("inlineCode",{parentName:"li"},"included_hash == at"),", where at is the block, whose state we are querying against, this must always return ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," as long as the slot, is more recent than the included block itself.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"blockbuilder"},"blockBuilder"),(0,r.kt)("h3",{id:"applyextrinsicextrinsic-spruntimeuncheckedextrinsic-resultresultnull-spruntimedispatcherror-spruntimetransactionvaliditytransactionvalidityerror"},"applyExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeUncheckedExtrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Result<Null, SpRuntimeDispatchError>, SpRuntimeTransactionValidityTransactionValidityError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.applyExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"blockBuilder_apply_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Apply the given extrinsic.,, Returns an inclusion outcome which specifies if this extrinsic is included in, this block or not.")),(0,r.kt)("h3",{id:"checkinherentsblock-spruntimeblock-data-spinherentsinherentdata-spinherentscheckinherentsresult"},"checkInherents(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeBlock"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpInherentsInherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpInherentsCheckInherentsResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.checkInherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"blockBuilder_check_inherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Check that the inherents are valid. The inherent data will vary from chain to chain.")),(0,r.kt)("h3",{id:"finalizeblock-spruntimeheader"},"finalizeBlock(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeHeader")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"blockBuilder_finalize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Finish the current block.")),(0,r.kt)("h3",{id:"inherentextrinsicsinherent-spinherentsinherentdata-vecbytes"},"inherentExtrinsics(inherent: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpInherentsInherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.inherentExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"blockBuilder_inherent_extrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Generate inherent extrinsics. The inherent data will vary from chain to chain.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"collectcollationinfo"},"collectCollationInfo"),(0,r.kt)("h3",{id:"collectcollationinfoheader-spruntimeheader-cumulusprimitivescorecollationinfo"},"collectCollationInfo(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeHeader"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CumulusPrimitivesCoreCollationInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.collectCollationInfo.collectCollationInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"collectCollationInfo_collect_collation_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Collect information about a collation.,, The given ",(0,r.kt)("inlineCode",{parentName:"li"},"header")," is the header of the built block for that, we are collecting the collation info for.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"core"},"core"),(0,r.kt)("h3",{id:"executeblockblock-spruntimeblock-null"},"executeBlock(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeBlock"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.executeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"core_execute_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Execute the given block.")),(0,r.kt)("h3",{id:"initializeblockheader-spruntimeheader-spruntimeextrinsicinclusionmode"},"initializeBlock(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeHeader"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeExtrinsicInclusionMode")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.initializeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"core_initialize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Initialize a block with the given header and return the runtime executive mode.")),(0,r.kt)("h3",{id:"version-spversionruntimeversion"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpVersionRuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"core_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the version of the runtime.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"dryrunapi"},"dryRunApi"),(0,r.kt)("h3",{id:"dryruncallorigin-assethubkusamaruntimeorigincaller-call-assethubkusamaruntimeruntimecall-resultxcmruntimeapisdryruncalldryruneffects-xcmruntimeapisdryrunerror"},"dryRunCall(origin: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AssetHubKusamaRuntimeOriginCaller"),", call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AssetHubKusamaRuntimeRuntimeCall"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<XcmRuntimeApisDryRunCallDryRunEffects, XcmRuntimeApisDryRunError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.dryRunApi.dryRunCall")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"dryRunApi_dry_run_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Dry run call.")),(0,r.kt)("h3",{id:"dryrunxcmorigin_location-xcmversionedlocation-xcm-xcmversionedxcm-resultxcmruntimeapisdryrunxcmdryruneffects-xcmruntimeapisdryrunerror"},"dryRunXcm(origin_location: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedLocation"),", xcm: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedXcm"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<XcmRuntimeApisDryRunXcmDryRunEffects, XcmRuntimeApisDryRunError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.dryRunApi.dryRunXcm")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"dryRunApi_dry_run_xcm")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Dry run XCM program")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"fungiblesapi"},"fungiblesApi"),(0,r.kt)("h3",{id:"queryaccountbalancesaccount-spcorecryptoaccountid32-resultxcmversionedassets-assetscommonruntimeapifungiblesaccesserror"},"queryAccountBalances(account: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpCoreCryptoAccountId32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<XcmVersionedAssets, AssetsCommonRuntimeApiFungiblesAccessError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.fungiblesApi.queryAccountBalances")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"fungiblesApi_query_account_balances")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the list of all ","[",(0,r.kt)("inlineCode",{parentName:"li"},"Asset"),"]"," that an ",(0,r.kt)("inlineCode",{parentName:"li"},"AccountId")," has.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"genesisbuilder"},"genesisBuilder"),(0,r.kt)("h3",{id:"buildstatejson-bytes-resultnull-text"},"buildState(json: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Null, Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.genesisBuilder.buildState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"genesisBuilder_build_state")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Build ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," from a JSON blob not using any defaults and store it in the, storage.,, In the case of a FRAME-based runtime, this function deserializes the full ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," from the given JSON blob and, puts it into the storage. If the provided JSON blob is incorrect or incomplete or the, deserialization fails, an error is returned.,, Please note that provided JSON blob must contain all ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," fields, no, defaults will be used.")),(0,r.kt)("h3",{id:"getpresetid-optiontext-optionbytes"},"getPreset(id: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.genesisBuilder.getPreset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"genesisBuilder_get_preset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns a JSON blob representation of the built-in ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," identified by, ",(0,r.kt)("inlineCode",{parentName:"li"},"id"),".,, If ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"None")," the function returns JSON blob representation of the default, ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," struct of the runtime. Implementation must provide default, ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig"),".,, Otherwise function returns a JSON representation of the built-in, named, ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," preset identified by ",(0,r.kt)("inlineCode",{parentName:"li"},"id"),", or ",(0,r.kt)("inlineCode",{parentName:"li"},"None")," if such preset does not, exist. Returned ",(0,r.kt)("inlineCode",{parentName:"li"},"Vec<u8>")," contains bytes of JSON blob (patch) which comprises a list of, (potentially nested) key-value pairs that are intended for customizing the default, runtime genesis config. The patch shall be merged (rfc7386) with the JSON representation, of the default ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," to create a comprehensive genesis config that can, be used in ",(0,r.kt)("inlineCode",{parentName:"li"},"build_state")," method.")),(0,r.kt)("h3",{id:"presetnames-vectext"},"presetNames(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.genesisBuilder.presetNames")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"genesisBuilder_preset_names")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns a list of identifiers for available builtin ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," presets.,, The presets from the list can be queried with ","[",(0,r.kt)("inlineCode",{parentName:"li"},"GenesisBuilder::get_preset"),"]"," method. If, no named presets are provided by the runtime the list is empty.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"locationtoaccountapi"},"locationToAccountApi"),(0,r.kt)("h3",{id:"convertlocationlocation-xcmversionedlocation-resultaccountid32-xcmruntimeapisconversionserror"},"convertLocation(location: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedLocation"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<AccountId32, XcmRuntimeApisConversionsError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.locationToAccountApi.convertLocation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"locationToAccountApi_convert_location")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Converts ",(0,r.kt)("inlineCode",{parentName:"li"},"Location")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"AccountId"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"metadata"},"metadata"),(0,r.kt)("h3",{id:"metadata-spcoreopaquemetadata"},"metadata(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpCoreOpaqueMetadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata_metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the metadata of a runtime.")),(0,r.kt)("h3",{id:"metadataatversionversion-u32-optionopaquemetadata"},"metadataAtVersion(version: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueMetadata>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadataAtVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata_metadata_at_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the metadata at a given version.,, If the given ",(0,r.kt)("inlineCode",{parentName:"li"},"version")," isn't supported, this will return ",(0,r.kt)("inlineCode",{parentName:"li"},"None"),"., Use ","[",(0,r.kt)("inlineCode",{parentName:"li"},"Self::metadata_versions"),"]"," to find out about supported metadata version of the runtime.")),(0,r.kt)("h3",{id:"metadataversions-vecu32"},"metadataVersions(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u32>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadataVersions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata_metadata_versions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns the supported metadata versions.,, This can be used to call ",(0,r.kt)("inlineCode",{parentName:"li"},"metadata_at_version"),".")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"offchainworkerapi"},"offchainWorkerApi"),(0,r.kt)("h3",{id:"offchainworkerheader-spruntimeheader-null"},"offchainWorker(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeHeader"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.offchainWorkerApi.offchainWorker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchainWorkerApi_offchain_worker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Starts the off-chain task for given block header.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"sessionkeys"},"sessionKeys"),(0,r.kt)("h3",{id:"decodesessionkeysencoded-bytes-optionvecbytesspcorecryptokeytypeid"},"decodeSessionKeys(encoded: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<(Bytes,SpCoreCryptoKeyTypeId)>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.decodeSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"sessionKeys_decode_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Decode the given public session keys.,, Returns the list of public raw public keys + key type.")),(0,r.kt)("h3",{id:"generatesessionkeysseed-optionbytes-bytes"},"generateSessionKeys(seed: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.generateSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"sessionKeys_generate_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Generate a set of session keys with optionally using the given seed., The keys should be stored within the keystore exposed via runtime, externalities.,, The seed needs to be a valid ",(0,r.kt)("inlineCode",{parentName:"li"},"utf8")," string.,, Returns the concatenated SCALE encoded public keys.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"taggedtransactionqueue"},"taggedTransactionQueue"),(0,r.kt)("h3",{id:"validatetransactionsource-spruntimetransactionvaliditytransactionsource-tx-spruntimeuncheckedextrinsic-block_hash-primitivetypesh256-resultspruntimetransactionvalidityvalidtransaction-spruntimetransactionvaliditytransactionvalidityerror"},"validateTransaction(source: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeTransactionValidityTransactionSource"),", tx: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeUncheckedExtrinsic"),", block_hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrimitiveTypesH256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<SpRuntimeTransactionValidityValidTransaction, SpRuntimeTransactionValidityTransactionValidityError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.taggedTransactionQueue.validateTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"taggedTransactionQueue_validate_transaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Validate the transaction.,, This method is invoked by the transaction pool to learn details about given transaction., The implementation should make sure to verify the correctness of the transaction, against current state. The given ",(0,r.kt)("inlineCode",{parentName:"li"},"block_hash")," corresponds to the hash of the block, that is used as current state.,, Note that this call may be performed by the pool multiple times and transactions, might be verified in any possible order.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentapi"},"transactionPaymentApi"),(0,r.kt)("h3",{id:"queryfeedetailsuxt-spruntimeuncheckedextrinsic-len-u32-pallettransactionpaymentfeedetails"},"queryFeeDetails(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeUncheckedExtrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"PalletTransactionPaymentFeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentApi_query_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": ")),(0,r.kt)("h3",{id:"queryinfouxt-spruntimeuncheckedextrinsic-len-u32-pallettransactionpaymentruntimedispatchinfo"},"queryInfo(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpRuntimeUncheckedExtrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"PalletTransactionPaymentRuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentApi_query_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": ")),(0,r.kt)("h3",{id:"querylengthtofeelength-u32-u128"},"queryLengthToFee(length: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryLengthToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentApi_query_length_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": ")),(0,r.kt)("h3",{id:"queryweighttofeeweight-spweightsweightv2weight-u128"},"queryWeightToFee(weight: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpWeightsWeightV2Weight"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryWeightToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentApi_query_weight_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": ")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentcallapi"},"transactionPaymentCallApi"),(0,r.kt)("h3",{id:"querycallfeedetailscall-assethubkusamaruntimeruntimecall-len-u32-pallettransactionpaymentfeedetails"},"queryCallFeeDetails(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AssetHubKusamaRuntimeRuntimeCall"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"PalletTransactionPaymentFeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentCallApi_query_call_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Query fee details of a given encoded ",(0,r.kt)("inlineCode",{parentName:"li"},"Call"),".")),(0,r.kt)("h3",{id:"querycallinfocall-assethubkusamaruntimeruntimecall-len-u32-pallettransactionpaymentruntimedispatchinfo"},"queryCallInfo(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AssetHubKusamaRuntimeRuntimeCall"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"PalletTransactionPaymentRuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentCallApi_query_call_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Query information of a dispatch class, weight, and fee of a given encoded ",(0,r.kt)("inlineCode",{parentName:"li"},"Call"),".")),(0,r.kt)("h3",{id:"querylengthtofeelength-u32-u128-1"},"queryLengthToFee(length: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryLengthToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentCallApi_query_length_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Query the output of the current ",(0,r.kt)("inlineCode",{parentName:"li"},"LengthToFee")," given some input.")),(0,r.kt)("h3",{id:"queryweighttofeeweight-spweightsweightv2weight-u128-1"},"queryWeightToFee(weight: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpWeightsWeightV2Weight"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryWeightToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"transactionPaymentCallApi_query_weight_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Query the output of the current ",(0,r.kt)("inlineCode",{parentName:"li"},"WeightToFee")," given some input.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"xcmpaymentapi"},"xcmPaymentApi"),(0,r.kt)("h3",{id:"queryacceptablepaymentassetsxcm_version-u32-resultvecxcmversionedassetid-xcmruntimeapisfeeserror"},"queryAcceptablePaymentAssets(xcm_version: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Vec<XcmVersionedAssetId>, XcmRuntimeApisFeesError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.xcmPaymentApi.queryAcceptablePaymentAssets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"xcmPaymentApi_query_acceptable_payment_assets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns a list of acceptable payment assets.,, # Arguments,, * ",(0,r.kt)("inlineCode",{parentName:"li"},"xcm_version"),": Version.")),(0,r.kt)("h3",{id:"querydeliveryfeesdestination-xcmversionedlocation-message-xcmversionedxcm-resultxcmversionedassets-xcmruntimeapisfeeserror"},"queryDeliveryFees(destination: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedLocation"),", message: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedXcm"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<XcmVersionedAssets, XcmRuntimeApisFeesError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.xcmPaymentApi.queryDeliveryFees")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"xcmPaymentApi_query_delivery_fees")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Get delivery fees for sending a specific ",(0,r.kt)("inlineCode",{parentName:"li"},"message")," to a ",(0,r.kt)("inlineCode",{parentName:"li"},"destination"),"., These always come in a specific asset, defined by the chain.,, # Arguments, ",(0,r.kt)("em",{parentName:"li"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"message"),": The message that'll be sent, necessary because most delivery fees are based on the,   size of the message., ")," ",(0,r.kt)("inlineCode",{parentName:"li"},"destination"),": The destination to send the message to. Different destinations may use,   different senders that charge different fees.")),(0,r.kt)("h3",{id:"queryweighttoassetfeeweight-spweightsweightv2weight-asset-xcmversionedassetid-resultu128-xcmruntimeapisfeeserror"},"queryWeightToAssetFee(weight: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SpWeightsWeightV2Weight"),", asset: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedAssetId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<u128, XcmRuntimeApisFeesError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.xcmPaymentApi.queryWeightToAssetFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"xcmPaymentApi_query_weight_to_asset_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Converts a weight into a fee for the specified ",(0,r.kt)("inlineCode",{parentName:"li"},"AssetId"),".,, # Arguments,, ",(0,r.kt)("em",{parentName:"li"}," ",(0,r.kt)("inlineCode",{parentName:"em"},"weight"),": convertible ",(0,r.kt)("inlineCode",{parentName:"em"},"Weight"),"., ")," ",(0,r.kt)("inlineCode",{parentName:"li"},"asset"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"VersionedAssetId"),".")),(0,r.kt)("h3",{id:"queryxcmweightmessage-xcmversionedxcm-resultspweightsweightv2weight-xcmruntimeapisfeeserror"},"queryXcmWeight(message: ",(0,r.kt)("inlineCode",{parentName:"h3"},"XcmVersionedXcm"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<SpWeightsWeightV2Weight, XcmRuntimeApisFeesError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.xcmPaymentApi.queryXcmWeight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"xcmPaymentApi_query_xcm_weight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),":  Returns a weight needed to execute a XCM.,, # Arguments,, * ",(0,r.kt)("inlineCode",{parentName:"li"},"message"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"VersionedXcm"),".")))}k.isMDXComponent=!0}}]);
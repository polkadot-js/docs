"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[8162],{4137:function(e,t,a){a.d(t,{Zo:function(){return k},kt:function(){return h}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},k=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=i,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return a?n.createElement(h,l(l({ref:t},k),{},{components:a})):n.createElement(h,l({ref:t},k))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6600:function(e,t,a){a.r(t),a.d(t,{assets:function(){return k},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var n=a(7462),i=a(3366),r=(a(7294),a(4137)),l=["components"],o={title:"JSON-RPC"},s=void 0,p={unversionedId:"asset-hub-kusama/rpc",id:"asset-hub-kusama/rpc",title:"JSON-RPC",description:"The following sections contain known RPC methods that may be available on specific nodes (depending on configuration and available pallets) and allow you to interact with the actual node, query, and submit.",source:"@site/docs/asset-hub-kusama/rpc.md",sourceDirName:"asset-hub-kusama",slug:"/asset-hub-kusama/rpc",permalink:"/docs/asset-hub-kusama/rpc",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/asset-hub-kusama/rpc.md",tags:[],version:"current",frontMatter:{title:"JSON-RPC"},sidebar:"reference",previous:{title:"Runtime",permalink:"/docs/asset-hub-kusama/runtime"},next:{title:"Constants",permalink:"/docs/asset-hub-kusama/constants"}},k={},c=[{value:"author",id:"author",level:2},{value:"hasKey(publicKey: <code>Bytes</code>, keyType: <code>Text</code>): <code>bool</code>",id:"haskeypublickey-bytes-keytype-text-bool",level:3},{value:"hasSessionKeys(sessionKeys: <code>Bytes</code>): <code>bool</code>",id:"hassessionkeyssessionkeys-bytes-bool",level:3},{value:"insertKey(keyType: <code>Text</code>, suri: <code>Text</code>, publicKey: <code>Bytes</code>): <code>Bytes</code>",id:"insertkeykeytype-text-suri-text-publickey-bytes-bytes",level:3},{value:"pendingExtrinsics(): <code>Vec&lt;Extrinsic&gt;</code>",id:"pendingextrinsics-vecextrinsic",level:3},{value:"removeExtrinsic(bytesOrHash: <code>Vec&lt;ExtrinsicOrHash&gt;</code>): <code>Vec&lt;Hash&gt;</code>",id:"removeextrinsicbytesorhash-vecextrinsicorhash-vechash",level:3},{value:"rotateKeys(): <code>Bytes</code>",id:"rotatekeys-bytes",level:3},{value:"submitAndWatchExtrinsic(extrinsic: <code>Extrinsic</code>): <code>ExtrinsicStatus</code>",id:"submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus",level:3},{value:"submitExtrinsic(extrinsic: <code>Extrinsic</code>): <code>Hash</code>",id:"submitextrinsicextrinsic-extrinsic-hash",level:3},{value:"chain",id:"chain",level:2},{value:"getBlock(hash?: <code>BlockHash</code>): <code>SignedBlock</code>",id:"getblockhash-blockhash-signedblock",level:3},{value:"getBlockHash(blockNumber?: <code>BlockNumber</code>): <code>BlockHash</code>",id:"getblockhashblocknumber-blocknumber-blockhash",level:3},{value:"getFinalizedHead(): <code>BlockHash</code>",id:"getfinalizedhead-blockhash",level:3},{value:"getHeader(hash?: <code>BlockHash</code>): <code>Header</code>",id:"getheaderhash-blockhash-header",level:3},{value:"subscribeAllHeads(): <code>Header</code>",id:"subscribeallheads-header",level:3},{value:"subscribeFinalizedHeads(): <code>Header</code>",id:"subscribefinalizedheads-header",level:3},{value:"subscribeNewHeads(): <code>Header</code>",id:"subscribenewheads-header",level:3},{value:"childstate",id:"childstate",level:2},{value:"getKeys(childKey: <code>PrefixedStorageKey</code>, prefix: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey",level:3},{value:"getKeysPaged(childKey: <code>PrefixedStorageKey</code>, prefix: <code>StorageKey</code>, count: <code>u32</code>, startKey?: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey",level:3},{value:"getStorage(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;StorageData&gt;</code>",id:"getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata",level:3},{value:"getStorageEntries(childKey: <code>PrefixedStorageKey</code>, keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>Hash</code>): <code>Vec&lt;Option&lt;StorageData&gt;&gt;</code>",id:"getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata",level:3},{value:"getStorageHash(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;Hash&gt;</code>",id:"getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash",level:3},{value:"getStorageSize(childKey: <code>PrefixedStorageKey</code>, key: <code>StorageKey</code>, at?: <code>Hash</code>): <code>Option&lt;u64&gt;</code>",id:"getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64",level:3},{value:"dev",id:"dev",level:2},{value:"getBlockStats(at: <code>Hash</code>): <code>Option&lt;BlockStats&gt;</code>",id:"getblockstatsat-hash-optionblockstats",level:3},{value:"engine",id:"engine",level:2},{value:"createBlock(createEmpty: <code>bool</code>, finalize: <code>bool</code>, parentHash?: <code>BlockHash</code>): <code>CreatedBlock</code>",id:"createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock",level:3},{value:"finalizeBlock(hash: <code>BlockHash</code>, justification?: <code>Justification</code>): <code>bool</code>",id:"finalizeblockhash-blockhash-justification-justification-bool",level:3},{value:"offchain",id:"offchain",level:2},{value:"localStorageClear(kind: <code>StorageKind</code>, key: <code>Bytes</code>): <code>Null</code>",id:"localstorageclearkind-storagekind-key-bytes-null",level:3},{value:"localStorageGet(kind: <code>StorageKind</code>, key: <code>Bytes</code>): <code>Option&lt;Bytes&gt;</code>",id:"localstoragegetkind-storagekind-key-bytes-optionbytes",level:3},{value:"localStorageSet(kind: <code>StorageKind</code>, key: <code>Bytes</code>, value: <code>Bytes</code>): <code>Null</code>",id:"localstoragesetkind-storagekind-key-bytes-value-bytes-null",level:3},{value:"payment",id:"payment",level:2},{value:"queryFeeDetails(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>FeeDetails</code>",id:"queryfeedetailsextrinsic-bytes-at-blockhash-feedetails",level:3},{value:"queryInfo(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>RuntimeDispatchInfoV1</code>",id:"queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1",level:3},{value:"rpc",id:"rpc",level:2},{value:"methods(): <code>RpcMethods</code>",id:"methods-rpcmethods",level:3},{value:"state",id:"state",level:2},{value:"call(method: <code>Text</code>, data: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>Bytes</code>",id:"callmethod-text-data-bytes-at-blockhash-bytes",level:3},{value:"getChildReadProof(childStorageKey: <code>PrefixedStorageKey</code>, keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>BlockHash</code>): <code>ReadProof</code>",id:"getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof",level:3},{value:"getKeys(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyskey-storagekey-at-blockhash-vecstoragekey",level:3},{value:"getKeysPaged(key: <code>StorageKey</code>, count: <code>u32</code>, startKey?: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageKey&gt;</code>",id:"getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey",level:3},{value:"getMetadata(at?: <code>BlockHash</code>): <code>Metadata</code>",id:"getmetadataat-blockhash-metadata",level:3},{value:"getPairs(prefix: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Vec&lt;KeyValue&gt;</code>",id:"getpairsprefix-storagekey-at-blockhash-veckeyvalue",level:3},{value:"getReadProof(keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>BlockHash</code>): <code>ReadProof</code>",id:"getreadproofkeys-vecstoragekey-at-blockhash-readproof",level:3},{value:"getRuntimeVersion(at?: <code>BlockHash</code>): <code>RuntimeVersion</code>",id:"getruntimeversionat-blockhash-runtimeversion",level:3},{value:"getStorage(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>StorageData</code>",id:"getstoragekey-storagekey-at-blockhash-storagedata",level:3},{value:"getStorageHash(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>Hash</code>",id:"getstoragehashkey-storagekey-at-blockhash-hash",level:3},{value:"getStorageSize(key: <code>StorageKey</code>, at?: <code>BlockHash</code>): <code>u64</code>",id:"getstoragesizekey-storagekey-at-blockhash-u64",level:3},{value:"queryStorage(keys: <code>Vec&lt;StorageKey&gt;</code>, fromBlock: <code>Hash</code>, toBlock?: <code>BlockHash</code>): <code>Vec&lt;StorageChangeSet&gt;</code>",id:"querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset",level:3},{value:"queryStorageAt(keys: <code>Vec&lt;StorageKey&gt;</code>, at?: <code>BlockHash</code>): <code>Vec&lt;StorageChangeSet&gt;</code>",id:"querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset",level:3},{value:"subscribeRuntimeVersion(): <code>RuntimeVersion</code>",id:"subscriberuntimeversion-runtimeversion",level:3},{value:"subscribeStorage(keys?: <code>Vec&lt;StorageKey&gt;</code>): <code>StorageChangeSet</code>",id:"subscribestoragekeys-vecstoragekey-storagechangeset",level:3},{value:"traceBlock(block: <code>Hash</code>, targets: <code>Option&lt;Text&gt;</code>, storageKeys: <code>Option&lt;Text&gt;</code>, methods: <code>Option&lt;Text&gt;</code>): <code>TraceBlockResponse</code>",id:"traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse",level:3},{value:"trieMigrationStatus(at?: <code>BlockHash</code>): <code>MigrationStatusResult</code>",id:"triemigrationstatusat-blockhash-migrationstatusresult",level:3},{value:"system",id:"system",level:2},{value:"accountNextIndex(accountId: <code>AccountId</code>): <code>Index</code>",id:"accountnextindexaccountid-accountid-index",level:3},{value:"addLogFilter(directives: <code>Text</code>): <code>Null</code>",id:"addlogfilterdirectives-text-null",level:3},{value:"addReservedPeer(peer: <code>Text</code>): <code>Text</code>",id:"addreservedpeerpeer-text-text",level:3},{value:"chain(): <code>Text</code>",id:"chain-text",level:3},{value:"chainType(): <code>ChainType</code>",id:"chaintype-chaintype",level:3},{value:"dryRun(extrinsic: <code>Bytes</code>, at?: <code>BlockHash</code>): <code>ApplyExtrinsicResult</code>",id:"dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult",level:3},{value:"health(): <code>Health</code>",id:"health-health",level:3},{value:"localListenAddresses(): <code>Vec&lt;Text&gt;</code>",id:"locallistenaddresses-vectext",level:3},{value:"localPeerId(): <code>Text</code>",id:"localpeerid-text",level:3},{value:"name(): <code>Text</code>",id:"name-text",level:3},{value:"nodeRoles(): <code>Vec&lt;NodeRole&gt;</code>",id:"noderoles-vecnoderole",level:3},{value:"peers(): <code>Vec&lt;PeerInfo&gt;</code>",id:"peers-vecpeerinfo",level:3},{value:"properties(): <code>ChainProperties</code>",id:"properties-chainproperties",level:3},{value:"removeReservedPeer(peerId: <code>Text</code>): <code>Text</code>",id:"removereservedpeerpeerid-text-text",level:3},{value:"reservedPeers(): <code>Vec&lt;Text&gt;</code>",id:"reservedpeers-vectext",level:3},{value:"resetLogFilter(): <code>Null</code>",id:"resetlogfilter-null",level:3},{value:"syncState(): <code>SyncState</code>",id:"syncstate-syncstate",level:3},{value:"version(): <code>Text</code>",id:"version-text",level:3}],d={toc:c},m="wrapper";function h(e){var t=e.components,a=(0,i.Z)(e,l);return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following sections contain known RPC methods that may be available on specific nodes (depending on configuration and available pallets) and allow you to interact with the actual node, query, and submit."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#author"},"author")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#chain"},"chain")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#childstate"},"childstate")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#dev"},"dev")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#engine"},"engine")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#offchain"},"offchain")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#payment"},"payment")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#rpc"},"rpc")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#state"},"state")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#system"},"system"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"author"},"author"),(0,r.kt)("h3",{id:"haskeypublickey-bytes-keytype-text-bool"},"hasKey(publicKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", keyType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.hasKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_hasKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if the keystore has private keys for the given public key and key type."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"hassessionkeyssessionkeys-bytes-bool"},"hasSessionKeys(sessionKeys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.hasSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_hasSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns true if the keystore has private keys for the given session public keys."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"insertkeykeytype-text-suri-text-publickey-bytes-bytes"},"insertKey(keyType: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", suri: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", publicKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.insertKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_insertKey")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Insert a key into the keystore."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"pendingextrinsics-vecextrinsic"},"pendingExtrinsics(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.pendingExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_pendingExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns all pending extrinsics, potentially grouped by sender")),(0,r.kt)("h3",{id:"removeextrinsicbytesorhash-vecextrinsicorhash-vechash"},"removeExtrinsic(bytesOrHash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ExtrinsicOrHash>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Hash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.removeExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_removeExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Remove given extrinsic from the pool and temporarily ban it to prevent reimporting"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"rotatekeys-bytes"},"rotateKeys(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.rotateKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_rotateKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate new session keys and returns the corresponding public keys"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"submitandwatchextrinsicextrinsic-extrinsic-extrinsicstatus"},"submitAndWatchExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ExtrinsicStatus")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.submitAndWatchExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_submitAndWatchExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submit and subscribe to watch an extrinsic until unsubscribed")),(0,r.kt)("h3",{id:"submitextrinsicextrinsic-extrinsic-hash"},"submitExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.author.submitExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"author_submitExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submit a fully formatted extrinsic for block inclusion")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"chain"},"chain"),(0,r.kt)("h3",{id:"getblockhash-blockhash-signedblock"},"getBlock(hash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SignedBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get header and body of a relay chain block")),(0,r.kt)("h3",{id:"getblockhashblocknumber-blocknumber-blockhash"},"getBlockHash(blockNumber?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockNumber"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getBlockHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the block hash for a specific block")),(0,r.kt)("h3",{id:"getfinalizedhead-blockhash"},"getFinalizedHead(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getFinalizedHead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getFinalizedHead")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get hash of the last finalized block in the canon chain")),(0,r.kt)("h3",{id:"getheaderhash-blockhash-header"},"getHeader(hash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.getHeader")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_getHeader")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the header for a specific block")),(0,r.kt)("h3",{id:"subscribeallheads-header"},"subscribeAllHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeAllHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeAllHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the newest header via subscription")),(0,r.kt)("h3",{id:"subscribefinalizedheads-header"},"subscribeFinalizedHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeFinalizedHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeFinalizedHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the best finalized header via subscription")),(0,r.kt)("h3",{id:"subscribenewheads-header"},"subscribeNewHeads(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.chain.subscribeNewHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"chain_subscribeNewHeads")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the best header via subscription")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"childstate"},"childstate"),(0,r.kt)("h3",{id:"getkeyschildkey-prefixedstoragekey-prefix-storagekey-at-hash-vecstoragekey"},"getKeys(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", prefix: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix from a child storage, leave empty to get all the keys")),(0,r.kt)("h3",{id:"getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey"},"getKeysPaged(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", prefix: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", count: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", startKey?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix from a child storage with pagination support")),(0,r.kt)("h3",{id:"getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata"},"getStorage(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<StorageData>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a child storage entry at a specific block state")),(0,r.kt)("h3",{id:"getstorageentrieschildkey-prefixedstoragekey-keys-vecstoragekey-at-hash-vecoptionstoragedata"},"getStorageEntries(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Option<StorageData>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorageEntries")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorageEntries")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns child storage entries for multiple keys at a specific block state")),(0,r.kt)("h3",{id:"getstoragehashchildkey-prefixedstoragekey-key-storagekey-at-hash-optionhash"},"getStorageHash(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Hash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the hash of a child storage entry at a block state")),(0,r.kt)("h3",{id:"getstoragesizechildkey-prefixedstoragekey-key-storagekey-at-hash-optionu64"},"getStorageSize(childKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<u64>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.childstate.getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"childstate_getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the size of a child storage entry at a block state")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"dev"},"dev"),(0,r.kt)("h3",{id:"getblockstatsat-hash-optionblockstats"},"getBlockStats(at: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<BlockStats>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.dev.getBlockStats")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"dev_getBlockStats")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Reexecute the specified ",(0,r.kt)("inlineCode",{parentName:"li"},"block_hash")," and gather statistics while doing so"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"engine"},"engine"),(0,r.kt)("h3",{id:"createblockcreateempty-bool-finalize-bool-parenthash-blockhash-createdblock"},"createBlock(createEmpty: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", finalize: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", parentHash?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CreatedBlock")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.engine.createBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"engine_createBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instructs the manual-seal authorship task to create a new block")),(0,r.kt)("h3",{id:"finalizeblockhash-blockhash-justification-justification-bool"},"finalizeBlock(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),", justification?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Justification"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.engine.finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"engine_finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instructs the manual-seal authorship task to finalize a block")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"offchain"},"offchain"),(0,r.kt)("h3",{id:"localstorageclearkind-storagekind-key-bytes-null"},"localStorageClear(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKind"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.offchain.localStorageClear")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchain_localStorageClear")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Clear offchain local storage under given key and prefix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"localstoragegetkind-storagekind-key-bytes-optionbytes"},"localStorageGet(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKind"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.offchain.localStorageGet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchain_localStorageGet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get offchain local storage under given key and prefix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"localstoragesetkind-storagekind-key-bytes-value-bytes-null"},"localStorageSet(kind: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKind"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.offchain.localStorageSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"offchain_localStorageSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Set offchain local storage under given key and prefix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"payment"},"payment"),(0,r.kt)("h3",{id:"queryfeedetailsextrinsic-bytes-at-blockhash-feedetails"},"queryFeeDetails(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.payment.queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the detailed fee of a given encoded extrinsic"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"deprecated"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryFeeDetails")," instead")),(0,r.kt)("h3",{id:"queryinfoextrinsic-bytes-at-blockhash-runtimedispatchinfov1"},"queryInfo(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfoV1")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.payment.queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"payment_queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the fee information for an encoded extrinsic"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"deprecated"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryInfo")," instead")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"rpc"},"rpc"),(0,r.kt)("h3",{id:"methods-rpcmethods"},"methods(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RpcMethods")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.rpc.methods")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"rpc_methods")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the list of RPC methods that are exposed by the node")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"state"},"state"),(0,r.kt)("h3",{id:"callmethod-text-data-bytes-at-blockhash-bytes"},"call(method: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Perform a call to a builtin on the chain")),(0,r.kt)("h3",{id:"getchildreadproofchildstoragekey-prefixedstoragekey-keys-vecstoragekey-at-blockhash-readproof"},"getChildReadProof(childStorageKey: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PrefixedStorageKey"),", keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReadProof")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getChildReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getChildReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns proof of storage for child key entries at a specific block state.")),(0,r.kt)("h3",{id:"getkeyskey-storagekey-at-blockhash-vecstoragekey"},"getKeys(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the keys with a certain prefix"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"deprecated"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeysPaged")," to retrieve keys")),(0,r.kt)("h3",{id:"getkeyspagedkey-storagekey-count-u32-startkey-storagekey-at-blockhash-vecstoragekey"},"getKeysPaged(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", count: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", startKey?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getKeysPaged")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix with pagination support.")),(0,r.kt)("h3",{id:"getmetadataat-blockhash-metadata"},"getMetadata(at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Metadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the runtime metadata")),(0,r.kt)("h3",{id:"getpairsprefix-storagekey-at-blockhash-veckeyvalue"},"getPairs(prefix: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<KeyValue>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getPairs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getPairs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"deprecated"),": Use ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getKeysPaged")," to retrieve keys"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"getreadproofkeys-vecstoragekey-at-blockhash-readproof"},"getReadProof(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ReadProof")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getReadProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns proof of storage entries at a specific block state")),(0,r.kt)("h3",{id:"getruntimeversionat-blockhash-runtimeversion"},"getRuntimeVersion(at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the runtime version")),(0,r.kt)("h3",{id:"getstoragekey-storagekey-at-blockhash-storagedata"},"getStorage(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageData")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage for a key")),(0,r.kt)("h3",{id:"getstoragehashkey-storagekey-at-blockhash-hash"},"getStorageHash(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorageHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage hash")),(0,r.kt)("h3",{id:"getstoragesizekey-storagekey-at-blockhash-u64"},"getStorageSize(key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageKey"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_getStorageSize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the storage size")),(0,r.kt)("h3",{id:"querystoragekeys-vecstoragekey-fromblock-hash-toblock-blockhash-vecstoragechangeset"},"queryStorage(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", fromBlock: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", toBlock?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageChangeSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.queryStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_queryStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query historical storage entries (by key) starting from a start block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"querystorageatkeys-vecstoragekey-at-blockhash-vecstoragechangeset"},"queryStorageAt(keys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageChangeSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.queryStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_queryStorageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query storage entries (by key) starting at block hash given as the second parameter")),(0,r.kt)("h3",{id:"subscriberuntimeversion-runtimeversion"},"subscribeRuntimeVersion(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.subscribeRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_subscribeRuntimeVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the runtime version via subscription")),(0,r.kt)("h3",{id:"subscribestoragekeys-vecstoragekey-storagechangeset"},"subscribeStorage(keys?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<StorageKey>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"StorageChangeSet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.subscribeStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_subscribeStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Subscribes to storage changes for the provided keys")),(0,r.kt)("h3",{id:"traceblockblock-hash-targets-optiontext-storagekeys-optiontext-methods-optiontext-traceblockresponse"},"traceBlock(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", targets: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),", storageKeys: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),", methods: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Text>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"TraceBlockResponse")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.traceBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_traceBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Provides a way to trace the re-execution of a single block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"triemigrationstatusat-blockhash-migrationstatusresult"},"trieMigrationStatus(at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"MigrationStatusResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.state.trieMigrationStatus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"state_trieMigrationStatus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Check current migration state"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"system"},"system"),(0,r.kt)("h3",{id:"accountnextindexaccountid-accountid-index"},"accountNextIndex(accountId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Index")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.accountNextIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_accountNextIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the next accountIndex as available on the node")),(0,r.kt)("h3",{id:"addlogfilterdirectives-text-null"},"addLogFilter(directives: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.addLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_addLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Adds the supplied directives to the current log filter"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"addreservedpeerpeer-text-text"},"addReservedPeer(peer: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.addReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_addReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Adds a reserved peer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"chain-text"},"chain(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_chain")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the chain")),(0,r.kt)("h3",{id:"chaintype-chaintype"},"chainType(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ChainType")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.chainType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_chainType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the chain type")),(0,r.kt)("h3",{id:"dryrunextrinsic-bytes-at-blockhash-applyextrinsicresult"},"dryRun(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", at?: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ApplyExtrinsicResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.dryRun")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_dryRun")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Dry run an extrinsic at a given block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"health-health"},"health(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Health")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.health")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_health")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return health status of the node")),(0,r.kt)("h3",{id:"locallistenaddresses-vectext"},"localListenAddresses(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.localListenAddresses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_localListenAddresses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example")),(0,r.kt)("h3",{id:"localpeerid-text"},"localPeerId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.localPeerId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_localPeerId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the base58-encoded PeerId of the node")),(0,r.kt)("h3",{id:"name-text"},"name(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the node name")),(0,r.kt)("h3",{id:"noderoles-vecnoderole"},"nodeRoles(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<NodeRole>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.nodeRoles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_nodeRoles")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the roles the node is running as")),(0,r.kt)("h3",{id:"peers-vecpeerinfo"},"peers(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<PeerInfo>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.peers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_peers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the currently connected peers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"properties-chainproperties"},"properties(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ChainProperties")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.properties")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_properties")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get a custom set of properties as a JSON object, defined in the chain spec")),(0,r.kt)("h3",{id:"removereservedpeerpeerid-text-text"},"removeReservedPeer(peerId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.removeReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_removeReservedPeer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Remove a reserved peer"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"reservedpeers-vectext"},"reservedPeers(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.reservedPeers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_reservedPeers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the list of reserved peers")),(0,r.kt)("h3",{id:"resetlogfilter-null"},"resetLogFilter(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.resetLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_resetLogFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Resets the log filter to Substrate defaults"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"unsafe"),": This method is only active with appropriate flags")),(0,r.kt)("h3",{id:"syncstate-syncstate"},"syncState(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SyncState")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.syncState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_syncState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the state of the syncing of the node")),(0,r.kt)("h3",{id:"version-text"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Text")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.rpc.system.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"jsonrpc"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"system_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves the version of the node")))}h.isMDXComponent=!0}}]);